name: Deploy Django App

on:
  push:
    branches:
      - master  # Настройте ветку, с которой вы хотите проводить деплой

jobs:
  deploy:
    runs-on: ubuntu-latest  # Используем Ubuntu для выполнения задач

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Загружаем репозиторий для выполнения действий

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  # Устанавливаем Docker Buildx для сборки образа

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Замените на свои значения из секретов GitHub
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download .env.prod from the server
        run: scp ${{secrets.SSH_HOST}}@${{secrets.SSH_USERNAME}}:/home/skk/vzr/.env.prod .
      - name: Download .env.prod.db from the server
        run: scp ${{secrets.SSH_HOST}}@${{secrets.SSH_USERNAME}}:/home/skk/vzr/.env.prod.db .

      - name: Build Docker Image
        run: docker-compose -f docker-compose.yml build  # Сборка Docker образа

      - name: Push Docker Image
        run: |
          docker-compose -f docker-compose.yml push  

      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}  # Замените на адрес вашего сервера
          username: ${{ secrets.SSH_USERNAME }}  # Замените на ваше имя пользователя
          key: ${{ secrets.KEY }}  # Замените на ваш приватный ключ SSH
          script: |
            cd /home/skk/vzr  # Переходим в папку на сервере
            docker-compose pull  # Получаем обновленный образ
            docker-compose up -d  # Запускаем контейнер в фоновом режиме
